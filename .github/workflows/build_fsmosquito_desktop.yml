name: Build FsMosquito Desktop

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - docs/**
      - README.md
  # pull_request:
  #   branches: [ master ]
  #   paths-ignore:
  #     - docs/**
  #     - README.md

jobs:

  build:

    runs-on: windows-latest
    
    env:
      WORKING_DIRECTORY: ./fsmosquito-desktop
      FRONTEND_DIRECTORY: ./fsmosquito-app
      FONT_AWESOME_AUTH_TOKEN: ${{ secrets.FONT_AWESOME_AUTH_TOKEN }}
      GPR_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CACHE_KEY: fsmosquito-desktop

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install dotnet
    - name: Install .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.101
    
    # dotnet core 3.1 currently needed for Electronizer
    - name: Install .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    # Install the electron .net build/packaging tool.
    - name: Install Electronizer
      run: dotnet tool install ElectronNET.CLI -g

    # Define cached artifacts used by the frontend
    -
      name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    -
      name: Define yarn caching settings
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ env.CACHE_KEY }}-yarn-${{ hashFiles('${{ env.FRONTEND_DIRECTORY }}/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.CACHE_KEY }}-yarn-
    -
      name: Define node_modules caching settings
      uses: actions/cache@v2
      with:
        path: '${{ env.FRONTEND_DIRECTORY }}/node_modules' 
        key: ${{ runner.os }}-${{ env.CACHE_KEY }}-node_modules-${{ hashFiles('${{ env.FRONTEND_DIRECTORY }}/yarn.lock') }}
    -
      name: Define NextJS caching settings
      uses: actions/cache@v2
      with:
        path: ${{ env.FRONTEND_DIRECTORY }}/.next/cache
        key: ${{ runner.os }}-${{ env.CACHE_KEY }}-nextjs-${{ hashFiles('${{ env.FRONTEND_DIRECTORY }}/yarn.lock') }}
    
    # Execute all unit tests in the solution
    # - name: Execute unit tests
    #  run: dotnet test

    # Build FsMosquito Desktop
    - name: Build the Electron .Net Application
      run: electronize build /target win

    # Upload the FSMosquito Desktop binaries.
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: FSMosquitoDesktop
        path: |
          ${{ github.workspace }}\fsmosquito-desktop\bin\desktop\fsmosquito-desktop*.exe
          ${{ github.workspace }}\fsmosquito-desktop\bin\desktop\fsmosquito-desktop*.exe.blockmap
          ${{ github.workspace }}\fsmosquito-desktop\bin\desktop\latest.yml

